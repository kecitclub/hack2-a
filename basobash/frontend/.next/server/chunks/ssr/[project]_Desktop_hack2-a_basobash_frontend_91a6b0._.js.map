{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/OMEN/Desktop/hack2-a/basobash/frontend/Desktop/hack2-a/basobash/frontend/components/geocodedListMap.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  useMap,\n  useMapEvents,\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\nconst GEOAPIFY_API_KEY = \"1f3eec48fa604cf7b262e4d4ba1d004c\";\n\n// Fix for Leaflet's default icon\nL.Icon.Default.imagePath = \"/\";\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"marker-icon-2x.png\",\n  iconUrl: \"marker-icon.png\",\n  shadowUrl: \"marker-shadow.png\",\n});\n\ninterface Location {\n  lat: number;\n  lon: number;\n  name: string;\n}\n\ninterface Feature {\n  geometry: { coordinates: [number, number] };\n  properties: { formatted: string };\n}\n\nconst GeocodedListMap = () => {\n  const [marker, setMarker] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState<Feature[]>([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showListForm, setShowListForm] = useState(false);\n\n  const AddMarker = () => {\n    const map = useMap();\n    useMapEvents({\n      dblclick: (e) => {\n        const { lat, lng } = e.latlng;\n        setMarker({ lat, lng });\n      },\n    });\n\n    // Add effect to handle flying to selected location\n    useEffect(() => {\n      if (selectedLocation) {\n        map.flyTo([selectedLocation.lat, selectedLocation.lng], 13, {\n          animate: true\n        });\n      }\n    }, [map, selectedLocation]);\n\n    return null;\n  };\n\n  const fetchSuggestions = async (searchText: string) => {\n    if (!searchText) {\n      setSuggestions([]);\n      return;\n    }\n    const url = `https://api.geoapify.com/v1/geocode/autocomplete?text=${encodeURIComponent(\n      searchText\n    )}&apiKey=${GEOAPIFY_API_KEY}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setSuggestions(data.features || []);\n    } catch (error) {\n      console.error(\"Error fetching Geoapify suggestions:\", error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    fetchSuggestions(e.target.value);\n  };\n\n  const handleSuggestionClick = (feature: Feature) => {\n    const [lon, lat] = feature.geometry.coordinates;\n    const newLocation = { lat, lng: lon };\n    setMarker(newLocation);\n    setSelectedLocation(newLocation);\n    setSuggestions([]);\n    setQuery(feature.properties.formatted);\n  };\n\n  const handleSaveToDB = () => {\n    if (marker) {\n      setShowListForm(true);\n    } else {\n      alert(\"Please add a marker before saving.\");\n    }\n  };\n\n\n\n\n  return (\n    <div className=\"h-[70vh] flex flex-col items-center justify-start\">\n      {/* Search input with autocomplete */}\n      <div className=\"flex justify-center w-full py-5 z-50\">\n        <div className=\"relative w-full max-w-md mx-auto\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={handleInputChange}\n            placeholder=\"Search for a location...\"\n            className=\"relative w-full p-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          {suggestions.length > 0 && (\n            <ul className=\"absolute z-[60] text-black text-left bg-white w-full shadow-lg rounded-lg mt-1 max-h-60 overflow-y-auto\">\n              {suggestions.map((feature, index) => (\n                <button\n                  key={index}\n                  className=\"w-full p-2 text-left hover:bg-gray-100 cursor-pointer z-20\"\n                  onClick={() => handleSuggestionClick(feature)}\n                  onKeyDown={(e) =>\n                    e.key === \"Enter\" && handleSuggestionClick(feature)\n                  }\n                  tabIndex={0}\n                >\n                  {feature.properties.formatted}\n                </button>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n      <div className=\"flex h-full flex-row\">\n        {/* Map container */}\n        <div className={`w-${showListForm ? '[45vw]' : '[90vw]'} z-10 h-full`}>\n          <MapContainer\n            center={[27.7172, 85.324]}\n            zoom={13}\n            style={{ height: \"100%\", width: \"100%\" }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <AddMarker />\n            {marker && (\n              <Marker position={[marker.lat, marker.lng]}>\n                <Popup>\n                  Marker at {marker.lat}, {marker.lng}\n                </Popup>\n              </Marker>\n            )}\n          </MapContainer>\n        </div>\n\n        {/* ListForm - Only show when showListForm is true */}\n        {showListForm && (\n          <div className=\"w-[45vw] z-10 h-full\">\n            <ListForm marker={marker} />\n          </div>\n        )}\n      </div>\n\n      {/* Save button */}\n      <div className=\"absolute bottom-5 left-5 z-50\">\n        <button\n          onClick={handleSaveToDB}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow-lg\"\n        >\n          {showListForm ? 'Hide Form' : 'Add Location'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GeocodedListMap;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}