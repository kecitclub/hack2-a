{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/OMEN/Desktop/hack2-a/basobash/frontend/frontend/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\n\nconst Login = () => {\n    const [phone, setPhone] = useState<string>(\"\");\n    const [password, setPassword] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n    const router = useRouter();\n\n    const handleLogin = async () => {\n        setError(\"\");\n\n        if (!phone || !password) {\n            setError(\"Phone number and password are required\");\n            return;\n        }\n\n        try {\n            const response = await fetch(\"http://localhost:3000/api/auth/login\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ phone, password }),\n            });\n\n            const rawText = await response.text();\n            console.log(\"Raw response:\", rawText);\n\n            let data;\n            try {\n                data = JSON.parse(rawText);\n            } catch (e) {\n                console.error(\"Error parsing response as JSON:\", e);\n                setError(\"Failed to parse server response\");\n                return;\n            }\n\n            if (response.ok && data.token) {\n                alert(\"Login successful\");\n                localStorage.setItem(\"token\", data.token);\n                router.push(\"/dashboard\");\n            } else {\n                setError(data.error || \"Invalid phone number or password\");\n            }\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            setError(\"An error occurred during login\");\n        }\n    };\n\n    return (\n        <div className=\"flex items-center justify-center h-screen bg-gray-100\">\n            <div className=\"w-full max-w-sm p-6 bg-white rounded-lg shadow-md\">\n                <h2 className=\"mb-6 text-2xl font-bold text-center text-gray-800\">Login</h2>\n                {error && <p className=\"mb-4 text-sm text-red-500\">{error}</p>}\n                <div className=\"mb-4\">\n                    <label className=\"block mb-1 text-sm font-medium text-gray-700\" htmlFor=\"phone\">\n                        Phone Number\n                    </label>\n                    <input\n                        id=\"phone\"\n                        type=\"text\"\n                        placeholder=\"Enter your phone number\"\n                        value={phone}\n                        onChange={(e) => setPhone(e.target.value)}\n                        className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block mb-1 text-sm font-medium text-gray-700\" htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                    />\n                </div>\n                <button\n                    onClick={handleLogin}\n                    className=\"w-full px-4 py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                >\n                    Login\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,QAAQ;IACV,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,iNAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,SAAS,CAAA,GAAA,8IAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc;QAChB,SAAS;QAET,IAAI,CAAC,SAAS,CAAC,UAAU;YACrB,SAAS;YACT;QACJ;QAEA,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,wCAAwC;gBACjE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YAC3C;YAEA,MAAM,UAAU,MAAM,SAAS,IAAI;YACnC,QAAQ,GAAG,CAAC,iBAAiB;YAE7B,IAAI;YACJ,IAAI;gBACA,OAAO,KAAK,KAAK,CAAC;YACtB,EAAE,OAAO,GAAG;gBACR,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,SAAS;gBACT;YACJ;YAEA,IAAI,SAAS,EAAE,IAAI,KAAK,KAAK,EAAE;gBAC3B,MAAM;gBACN,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;gBACxC,OAAO,IAAI,CAAC;YAChB,OAAO;gBACH,SAAS,KAAK,KAAK,IAAI;YAC3B;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,uBAAuB;YACrC,SAAS;QACb;IACJ;IAEA,qBACI,0PAAC;QAAI,WAAU;kBACX,cAAA,0PAAC;YAAI,WAAU;;8BACX,0PAAC;oBAAG,WAAU;8BAAoD;;;;;;gBACjE,uBAAS,0PAAC;oBAAE,WAAU;8BAA6B;;;;;;8BACpD,0PAAC;oBAAI,WAAU;;sCACX,0PAAC;4BAAM,WAAU;4BAA+C,SAAQ;sCAAQ;;;;;;sCAGhF,0PAAC;4BACG,IAAG;4BACH,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;;;;;;;;;;;;8BAGlB,0PAAC;oBAAI,WAAU;;sCACX,0PAAC;4BAAM,WAAU;4BAA+C,SAAQ;sCAAW;;;;;;sCAGnF,0PAAC;4BACG,IAAG;4BACH,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;;;;;;;;;;;;8BAGlB,0PAAC;oBACG,SAAS;oBACT,WAAU;8BACb;;;;;;;;;;;;;;;;;AAMjB;uCAEe"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}